CONTRACT_TYPE
{
	sortKey = d

	name = ConstellationsMoonRelayLagrangeStationKeep
	group = RelayConstellations

	genericTitle = TODO
	title = TODO
	description = TODO

	maxSimultaneous = 1

	synopsis = TODO
	genericDescription = TODO

	completedMessage = The relay is in position and working!

	prestige = Trivial

	targetBody = @/tidalMoon

	rewardScience = 0
	rewardReputation = @RelayConstellations:moonRelayReputation
	rewardFunds = @RelayConstellations:moonRelayFunds
	advanceFunds = @rewardFunds / 3
	failureReputation = @rewardReputation
	failureFunds = @advanceFunds

	DATA
	{
		type = Boolean
		coMoon = HomeWorld().Parent().IsPlanet()
		hidden = True
	}

	DATA
	{
		type = CelestialBody
		tidalMoon = (@/coMoon ? HomeWorld().Parent().Children() : HomeWorld().Children()).Where(b => (b.Orbit().Period() == b.RotationalPeriod())).SelectUnique()
		uniquenessCheck = CONTRACT_ACTIVE

		title = "Target body must be "+HomeWorld()+"'s tidally locked moon or co-moon"
	}

	DATA
	{
		type = List<VesselIdentifier>

		requiredValue = false

		l4Relays = $constellations_l4_relays.Where(v => (Vessel(v).CelestialBody() == @/targetBody.Parent())))
		l5Relays = $constellations_l5_relays.Where(v => (Vessel(v).CelestialBody() == @/targetBody.Parent())))
	}

	REQUIREMENT
	{
		name = RelaysEstablished
		type = Expression

		expression = @/l4Relays.Count() >= 1 && @/l5Relays.Count() >= 1
		title = Both L4 and L5 relays must be already established
	}

	DATA
	{
		type = double
		requiredAntennaPower = Pow(@/targetBody.Orbit().Apoapsis() + @/targetBody.SphereOfInfluence() + (@/coMoon ? HomeWorld().Orbit().Apoapsis() : 0), 2) / 2000000000 // assume 2G at home
	}

	DATA
	{
		type = string
		l4Marker = @/targetBody+" L4 Relay Marker"
		l5Marker = @/targetBody+" L5 Relay Marker"
		hidden = true
	}

	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			name = @/l4Marker
			craftPart = constellations-dummy
			owned = False
			targetBody = @/targetBody.Parent()
			vesselType = DroppedPart

			ORBIT
			{
				SMA = @/targetBody.Orbit().SemiMajorAxis()
				ECC = @/targetBody.Orbit().Eccentricity() + 1.0E-10
				INC = @/targetBody.Orbit().Inclination() + 1.0E-10
				LPE = @/targetBody.Orbit().ArgumentOfPeriapsis()
				LAN = @/targetBody.Orbit().LAN() + 1.0E-10
				MNA = @/targetBody.Orbit().MeanAnomalyAtEpoch() - 5.23598775598
				EPH = @/targetBody.Orbit().Epoch() + 1.0E-10
				REF = 0 // ignored
			}
		}

		VESSEL
		{
			name = @/l5Marker
			craftPart = constellations-dummy
			owned = False
			targetBody = @/targetBody.Parent()
			vesselType = DroppedPart

			ORBIT
			{
				SMA = @/targetBody.Orbit().SemiMajorAxis()
				ECC = @/targetBody.Orbit().Eccentricity() + 1.0E-10
				INC = @/targetBody.Orbit().Inclination() + 1.0E-10
				LPE = @/targetBody.Orbit().ArgumentOfPeriapsis()
				LAN = @/targetBody.Orbit().LAN() + 1.0E-10
				MNA = @/targetBody.Orbit().MeanAnomalyAtEpoch() + 5.23598775598
				EPH = @/targetBody.Orbit().Epoch() + 1.0E-10
				REF = 0 // ignored
			}
		}
	}

	PARAMETER
	{
		name = L4Relay
		type = VesselParameterGroup

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
	}


	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = @/l4Marker
		vessel = @/l5Marker
	}
}
