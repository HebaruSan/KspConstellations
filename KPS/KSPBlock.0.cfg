CONTRACT_TYPE
{
	sortKey = b
	name = ConstellationsKPSBlock.0
	group = KPSConstellations

	title = Launch the first block of KPS satellites
	description = The prototype is working flawlessly, time to add more satellites: we settled on a constellation of 24 satellites in 6 orbital planes (4 per plane). The higher-ups gave us the go-ahead to complete the first plane. The plan is to separate the construction into 6 stages corresponding to each plane.

	synopsis = Place 3 more navigation satellites in the same plane in MKO

	maxCompletions = 1
	maxSimultaneous = 1

	completedMessage = Block I is complete!

	prestige = Significant

	maxExpiry = 21

	targetBody = HomeWorld()

	rewardScience = 0
	rewardReputation = @KPSConstellations:reputation
	rewardFunds = @KPSConstellations:funds
	advanceFunds = @rewardFunds / 3
	failureReputation = @rewardReputation
	failureFunds = @advanceFunds

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = ConstellationsKPSPrototype
		cooldownDuration = @Constellations:kpsCD
	}

	DATA
	{
		type = long
		intAlt = @KPSConstellations:sma - HomeWorld().Radius()
		block = 0
	}

	DATA
	{
		type = double

		magnitude = Round(Log(@/intAlt, 10), 1)
		g1 = Pow(10, Max(@magnitude-4, 2))
		g2 = Max(Pow(10, @magnitude-7), 0.5)

		oPrecision0 = Max(Round(@/intAlt / 500, @g1), 20 * @g1)
		oPrecision1 = Max(Round(@/intAlt / 10000, @g1), @g1)
		oPrecision2 = Max(Round(@/intAlt / 10000000, @g2), @g2)
		dPrecision0 = Max(Round(@/intAlt / 250000, 2000 * @g2), 2000 * @g2)
		dPrecision1 = Max(Round(@/intAlt / 10000000, 200 * @g2), 200 * @g2)
	}

	DATA
	{
		type = List<double>
		offsets = [1.5707963268, 3.1415926536, 4.7123889804]
	}

	DATA
	{
		type = List<string>
		names = ["The first satellite", "The second satellite", "The third satellite"]
		vessels = ["KPS-Sat A2", "KPS-Sat A3", "KPS-Sat A4"]
		markers = ["KPS Marker A2", "KPS Marker A3", "KPS Marker A4"]
	}

	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			name = @/markers.ElementAt(0)
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			ORBIT = CreateOrbit([@KPSConstellations:sma, 1.0E-11, @KPSConstellations:inc, 0, 0, @/offsets.ElementAt(0) + @/block * @KPSConstellations:blockPhaseOffset, 1.0E-11], 1)
		}
	}

	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			name = @/markers.ElementAt(1)
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			ORBIT = CreateOrbit([@KPSConstellations:sma, 1.0E-11, @KPSConstellations:inc, 0, 0, @/offsets.ElementAt(1) + @/block * @KPSConstellations:blockPhaseOffset, 1.0E-11], 1)
		}
	}

	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			name = @/markers.ElementAt(2)
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			ORBIT = CreateOrbit([@KPSConstellations:sma, 1.0E-11, @KPSConstellations:inc, 0, 0, @/offsets.ElementAt(2) + @/block * @KPSConstellations:blockPhaseOffset, 1.0E-11], 1)
		}
	}

	PARAMETER
	{
		ITERATOR
		{
			type = int
			idx = [0, 1, 2]
		}
		name = "Sat"+@idx
		type = All
		title = @/names.ElementAt(@idx)

		rewardFunds = @KPSConstellations:perSatFunds

		PARAMETER
		{
			name = Baseline
			type = VesselParameterGroup

			define = @/vessels.ElementAt(@../idx)

			PARAMETER
			{
				name = NewVessel
				type = NewVessel
			}

			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				minCrew = 0
				maxCrew = 0
			}

			PARAMETER
			{
				name = HasAntenna
				type = HasAntenna
				minAntennaPower = 10000000000 // 10G
				antennaType = TRANSMIT
			}

			PARAMETER
			{
				name = Any
				type = Any
				title = Have solar panels onboard

				PARAMETER
				{
					name = PartValidation
					type = PartValidation
					title = 1 or more solar panels
					hideChildren = true

					partModule = ModuleDeployableSolarPanel
					minCount = 1
				}
			
				PARAMETER:NEEDS[NearFutureSolar]
				{
					name = PartValidation
					type = PartValidation
					title = 1 or more curved solar panels
					hideChildren = true
					
					partModule = ModuleCurvedSolarPanel
					minCount = 1
				}
			
				PARAMETER:NEEDS[Kopernicus]
				{
					name = PartValidation
					type = PartValidation
					hideChildren = true
					title = 1 or more solar panels
					partModule = KopernicusSolarPanel
					minCount = 1
				}
			}

			PARAMETER
			{
				name = Orbit
				type = Orbit

				minPeA = Max(0, @/intAlt - @/oPrecision0)
				maxApA = @/intAlt + @/oPrecision0

				minInclination = Max(0, @KPSConstellations:inc - 0.1)
				maxInclination = Min(180, @KPSConstellations:inc + 0.1)
			}

			PARAMETER
			{
				name = Rendezvous
				type = Rendezvous

				title = "Place the satellite within "+@/dPrecision0.ToString("0")+"m of the "+@/markers.ElementAt(@../../idx)
				hideChildren = !@Constellations:DEBUG

				disableOnStateChange = true

				vessel = @/markers.ElementAt(@../../idx)
				distance = @/dPrecision0
			}

			duration = 2d
		}

		PARAMETER
		{
			name = Precision1
			type = VesselParameterGroup

			vessel = @/vessels.ElementAt(@../idx)

			title = "Circularize at "+@/intAlt+"m with less than "+@/oPrecision1.ToString("0")+"m deviation (Optional)"

			optional = True
			rewardReputation = @Constellations:precisionReputation
			rewardFunds = @Constellations:precisionFunds

			PARAMETER
			{
				name = Precision1Orbit
				type = Orbit
				hidden = !@Constellations:DEBUG
				hideChildren = !@Constellations:DEBUG

				minPeA = Max(0, @/intAlt - @/oPrecision1)
				maxApA = @/intAlt + @/oPrecision1
			}

			duration = 2s
		}

		PARAMETER
		{
			name = Precision2
			type = VesselParameterGroup

			vessel = @/vessels.ElementAt(@../idx)

			title = "Circularize at "+@/intAlt+"m with less than "+@/oPrecision2.ToString("0")+"m deviation (Optional)"

			optional = True
			rewardReputation = 2 * @Constellations:precisionReputation
			rewardFunds = 2 * @Constellations:precisionFunds

			PARAMETER
			{
				name = Precision2Orbit
				type = Orbit
				hidden = !@Constellations:DEBUG
				hideChildren = !@Constellations:DEBUG

				minPeA = Max(0, @/intAlt - @/oPrecision2)
				maxApA = @/intAlt + @/oPrecision2
			}

			duration = 2s
		}

		PARAMETER
		{
			name = Precision3
			type = VesselParameterGroup

			vessel = @/vessels.ElementAt(@../idx)

			title = "Place the satellite within "+@/dPrecision1.ToString("0")+"m of the "+@/markers.ElementAt(@../idx)+" (Optional)"

			optional = True
			rewardReputation = @Constellations:precisionReputation
			rewardFunds = @Constellations:precisionFunds

			PARAMETER
			{
				name = Precision3Rendezvous
				type = Rendezvous
				hidden = !@Constellations:DEBUG
				hideChildren = !@Constellations:DEBUG

				vessel = @/markers.ElementAt(@../../idx)
				distance = @/dPrecision1
			}
		}
	}

	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = PARAMETER_COMPLETED
		parameter = Sat0
		vessel = @/markers.ElementAt(0)
	}

	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = PARAMETER_COMPLETED
		parameter = Sat1
		vessel = @/markers.ElementAt(1)
	}

	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = PARAMETER_COMPLETED
		parameter = Sat2
		vessel = @/markers.ElementAt(2)
	}
}
