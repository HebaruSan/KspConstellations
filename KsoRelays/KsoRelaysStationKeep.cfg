CONTRACT_TYPE
{
	sortKey = b
	name = ConstellationsKsoRelayStationKeep
	group = RelayConstellations

	title = Kerbostationary relays station-keeping
	description = It's been more than a year since we last verified position of the KSO relays. It is normal for satellite to drift from its target position over time, we ask you to bring the relays back within margins. If a vessel is already in a correct position, you don't have to do anything other that focusing it.

	maxSimultaneous = 1

	synopsis = Fix KSO relays orbits if necessary

	completedMessage = The relays are in position and working!

	prestige = Trivial

	targetBody = HomeWorld()

	rewardScience = 0
	rewardReputation = @RelayConstellations:ksoStationKeepReputation
	rewardFunds = @RelayConstellations:ksoStationKeepFunds
	advanceFunds = 0
	failureReputation = @rewardReputation
	failureFunds = @advanceFunds

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		title = Must have established KSO relays through contract, but no earlier than 1 year ago.

		contractType = ConstellationsKsoRelayFollowUp
		cooldownDuration = 1d //1y TODO
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		title = At least 1 year has passed since the last time the contract was completed.

		contractType = ConstellationsKsoRelayStationKeep
		cooldownDuration = 2d //1y TODO
	}

	DATA
	{
		type = List<string>
		vessels = ["KSO Relay A", "KSO Relay B", "KSO Relay C"]
		markers = ["KSO Relay Marker A", "KSO Relay Marker B", "KSO Relay Marker C"]
	}

	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			name = @/markers.ElementAt(0)
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			ORBIT
			{
				SMA = 3463334.0398701429
				ECC = 0
				INC = 0
				LPE = 237.38459898406168
				LAN = 0
				MNA = 1.5322871042446775
				EPH = 18545.434569902998
				REF = 1
			}
		}

		VESSEL
		{
			name = @/markers.ElementAt(1)
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			ORBIT
			{
				SMA = 3463334.0398701429
				ECC = 0
				INC = 0
				LPE = 237.38459898406168
				LAN = 0
				MNA = 3.62668220424
				EPH = 18545.434569902998
				REF = 1
			}
		}

		VESSEL
		{
			name = @/markers.ElementAt(2)
			craftPart = constellations-dummy
			owned = False
			targetBody = HomeWorld()
			vesselType = DroppedPart

			ORBIT
			{
				SMA = 3463334.0398701429
				ECC = 0
				INC = 0
				LPE = 237.38459898406168
				LAN = 0
				MNA = 5.72107730424
				EPH = 18545.434569902998
				REF = 1
			}
		}
	}


	PARAMETER
	{
		name = RelayA
		type = VesselParameterGroup

		define = @/vessels.ElementAt(0)
		dissassociateVesselsOnContractCompletion = true

		completedMessage = Position of @/vessels.ElementAt(0) verified successfully

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = HasAntenna
			type = HasAntenna
			minAntennaPower = 200000000000 // 200G
			antennaType = RELAY
		}

		PARAMETER
		{
			name = PowerGenerator
			type = Any
			title = Have solar panels onboard
			hideChildren = !@Constellations:DEBUG

			PARAMETER
			{
				name = StockSolarGenerator
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = NFSolarGenerator
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		
			PARAMETER:NEEDS[Kopernicus]
			{
				name = KopernicusSolarGenerator
				type = PartValidation
				partModule = KopernicusSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		}

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Relay
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit

			minPeriod = 5h 59m 4s
			maxPeriod = 5h 59m 14s

			minPeA = 2860834
			maxApA = 2865834

			maxInclination = 0.1
		}

		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			hideChildren = !@Constellations:DEBUG

			title = The relay should be within 100km of the @/markers.ElementAt(0)

			vessel = @/markers.ElementAt(0)
			distance = 100000

			disableOnStateChange = true
		}

		duration = 5s
	}


	PARAMETER
	{
		name = RelayB
		type = VesselParameterGroup

		define = @/vessels.ElementAt(1)

		completedMessage = Position of @/vessels.ElementAt(1) verified successfully

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = HasAntenna
			type = HasAntenna
			minAntennaPower = 200000000000 // 200G
			antennaType = RELAY
		}

		PARAMETER
		{
			name = PowerGenerator
			type = Any
			title = Have solar panels onboard
			hideChildren = !@Constellations:DEBUG

			PARAMETER
			{
				name = StockSolarGenerator
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = NFSolarGenerator
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		
			PARAMETER:NEEDS[Kopernicus]
			{
				name = KopernicusSolarGenerator
				type = PartValidation
				partModule = KopernicusSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		}

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Relay
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit

			minPeriod = 5h 59m 4s
			maxPeriod = 5h 59m 14s

			minPeA = 2860834
			maxApA = 2865834

			maxInclination = 0.1
		}

		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			hideChildren = !@Constellations:DEBUG

			title = The relay should be within 100km of the @/markers.ElementAt(1)

			vessel = @/markers.ElementAt(1)
			distance = 100000

			disableOnStateChange = true
		}

		duration = 5s
	}


	PARAMETER
	{
		name = RelayC
		type = VesselParameterGroup

		define = @/vessels.ElementAt(2)

		completedMessage = Position of @/vessels.ElementAt(2) verified successfully

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = HasAntenna
			type = HasAntenna
			minAntennaPower = 200000000000 // 200G
			antennaType = RELAY
		}

		PARAMETER
		{
			name = PowerGenerator
			type = Any
			title = Have solar panels onboard
			hideChildren = !@Constellations:DEBUG

			PARAMETER
			{
				name = StockSolarGenerator
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = NFSolarGenerator
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		
			PARAMETER:NEEDS[Kopernicus]
			{
				name = KopernicusSolarGenerator
				type = PartValidation
				partModule = KopernicusSolarPanel
				hideChildren = !@Constellations:DEBUG
				minCount = 1
			}
		}

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Relay
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit

			minPeriod = 5h 59m 4s
			maxPeriod = 5h 59m 14s

			minPeA = 2860834
			maxApA = 2865834

			maxInclination = 0.1
		}

		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			hideChildren = !@Constellations:DEBUG

			title = The relay should be within 100km of the @/markers.ElementAt(2)

			vessel = @/markers.ElementAt(2)
			distance = 100000

			disableOnStateChange = true
		}

		duration = 5s
	}


	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = @/markers.ElementAt(0)
		vessel = @/markers.ElementAt(1)
		vessel = @/markers.ElementAt(2)
	}

	// completedMessage not working for some reason, but we need a feedback for the user
	BEHAVIOUR
	{
		name = MessageA
		type = Message

		title = Contract Parameter Complete
		message = Position of @/vessels.ElementAt(0) verified successfully

		CONDITION
		{
			condition = PARAMETER_COMPLETED
			parameter = RelayA
		}
	}

	BEHAVIOUR
	{
		name = MessageB
		type = Message

		title = Contract Parameter Complete
		message = Position of @/vessels.ElementAt(1) verified successfully

		CONDITION
		{
			condition = PARAMETER_COMPLETED
			parameter = RelayB
		}
	}

	BEHAVIOUR
	{
		name = MessageC
		type = Message

		title = Contract Parameter Complete
		message = Position of @/vessels.ElementAt(2) verified successfully

		CONDITION
		{
			condition = PARAMETER_COMPLETED
			parameter = RelayC
		}
	}
}
